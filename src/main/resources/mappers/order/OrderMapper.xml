<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.attaparunever2.order.OrderMapper">

    <insert id="postOrder" useGeneratedKeys="true" keyProperty="orderId">
        INSERT INTO `order`
        SET user_id = #{userId}
        , restaurant_id = #{restaurantId}
        , reservation_yn = #{reservationYn}
        , reservation_status = #{reservationStatus}
    </insert>

    <insert id="postOrderDetail" useGeneratedKeys="true" keyProperty="orderDetailId">
        INSERT INTO order_detail
        SET order_id = #{orderId},
        menu_id = #{menuId},
        menu_count = #{menuCount},
        price = (SELECT price FROM restaurant_menu WHERE menu_id = #{menuId})
    </insert>

    <select id="getOrder">
        SELECT
        A.order_id AS orderId,
        A.user_id AS userId,
        A.reservation_yn AS reservationYn,
        A.reservation_status AS reservationStatus,
        A.created_at AS orderDate,
        B.menu_id AS menuId,
        B.menu_count AS menuCount,
        B.price AS menuPrice,
        C.menu_name AS menuName,
        SUM(B.price * B.menu_count) AS totalPrice,
        R.reservation_id AS reservationId,
        R.reservation_time AS reservationTime,
        R.reservation_people_count AS reservationPeopleCount,
        R.reservation_cancel_reason AS reservationCancelReason,
        R.user_phone AS userPhone,
        R.created_at AS reservationCreatedAt
        FROM `order` A
        LEFT JOIN order_detail B
        ON A.order_id = B.order_id
        LEFT JOIN restaurant_menu C
        ON B.menu_id = C.menu_id
        LEFT JOIN reservation R
        ON A.order_id = R.order_id
        WHERE A.order_id = #{orderId}
        GROUP BY A.order_id, B.menu_id
    </select>

    <update id="updOrderAccess">
        <![CDATA[
        UPDATE `order`
        SET reservation_status = CASE
            WHEN #{reservationStatus} = 3
            AND TIMESTAMPDIFF(HOUR, (SELECT created_at FROM reservation WHERE order_id = #{orderId}),
            NOW()) > 1 THEN reservation_status
            ELSE #{reservationStatus}
        END
        WHERE order_id = #{orderId};
    ]]>
    </update>

    <select id="getOrderById">
        SELECT
        reservation_yn AS reservationYn,
        reservation_status AS reservationStatus
        FROM `order`
        WHERE order_id = #{orderId};
    </select>

</mapper>